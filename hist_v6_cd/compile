#!/bin/sh

export CORSOCXX_PATH=${HOME}/TMP_stuff/test_cd_v6
export CORSOCXX_UTIL=${CORSOCXX_PATH}/util/include/
cd `dirname $0`
export ANALYSIS_PATH=`/bin/pwd` #set the directory as the same as corsocxx_path
#se si presentano errori di compilazione come "missing directory", sostituire la riga 6 con la 8
#export ANALYSIS_PATH=${CORSOCXX_PATH}

echo "Per errori di compilazione vedere souce del compile"

#####################################################################

export LIB_NAME=AnalysisFramework
echo "compile " ${LIB_NAME}
cd ${ANALYSIS_PATH}/${LIB_NAME}
rm -f ${ANALYSIS_PATH}/lib${LIB_NAME}.so
c++ -Wall $(root-config --cflags --libs) -fPIC -shared -I. -I ${CORSOCXX_UTIL} -I ${ANALYSIS_PATH} \
-o ${ANALYSIS_PATH}/lib${LIB_NAME}.so *.cc *.cpp

export LIB_NAME=AnalysisObjects
echo "compile " ${LIB_NAME}
cd ${ANALYSIS_PATH}/${LIB_NAME}
rm -f ${ANALYSIS_PATH}/lib${LIB_NAME}.so
c++ -Wall $(root-config --cflags --libs) -fPIC -shared -I. -I ${CORSOCXX_UTIL} -I ${ANALYSIS_PATH} \
-o ${ANALYSIS_PATH}/lib${LIB_NAME}.so *.cc

export LIB_NAME=AnalysisUtilities
echo "compile " ${LIB_NAME}
cd ${ANALYSIS_PATH}/${LIB_NAME}
rm -f ${ANALYSIS_PATH}/lib${LIB_NAME}.so
c++ -Wall -fPIC -shared -I. -I ${CORSOCXX_UTIL} -I ${ANALYSIS_PATH} \
-o ${ANALYSIS_PATH}/lib${LIB_NAME}.so *.cc

#compilazione degli analizzatori

export LIB_NAME=AnalysisPlugins
echo "compile " ${LIB_NAME}
cd ${ANALYSIS_PATH}/${LIB_NAME}
rm -f ${ANALYSIS_PATH}/lib${LIB_NAME}.so
c++ -Wall $(root-config --cflags --libs) -fPIC -shared -I. -I ${CORSOCXX_UTIL} -I ${ANALYSIS_PATH} \
-o ${ANALYSIS_PATH}/lib${LIB_NAME}.so *.cc

#singoli analizzatori -----------------------------------------------------------------------------------

export LIB_NAME=dump
echo "compile  AnalysisPlugins:" ${LIB_NAME}
rm -f ${ANALYSIS_PATH}/lib${LIB_NAME}.so
c++ -Wall $(root-config --cflags --libs) -fPIC -shared -I. -I ${CORSOCXX_UTIL} -I ${ANALYSIS_PATH} \
-o ${ANALYSIS_PATH}/lib${LIB_NAME}.so EventDump.cc

export LIB_NAME=plotTime
echo "compile  AnalysisPlugins:" ${LIB_NAME}
rm -f ${ANALYSIS_PATH}/lib${LIB_NAME}.so
c++ -Wall $(root-config --cflags --libs) -fPIC -shared -I. -I ${CORSOCXX_UTIL} -I ${ANALYSIS_PATH} \
-o ${ANALYSIS_PATH}/lib${LIB_NAME}.so ParticleLifetime.cc

export LIB_NAME=plotMass
echo "compile  AnalysisPlugins:" ${LIB_NAME}
rm -f ${ANALYSIS_PATH}/lib${LIB_NAME}.so
c++ -Wall $(root-config --cflags --libs) -fPIC -shared -I. -I ${CORSOCXX_UTIL} -I ${ANALYSIS_PATH} \
-o ${ANALYSIS_PATH}/lib${LIB_NAME}.so ParticleMass.cc

#####################################################################

cd ${ANALYSIS_PATH}

#echo "Directory: analysis path  " ${ANALYSIS_PATH}

export EXE_NAME=runAll
echo "compile " ${EXE_NAME}
rm -f ${EXE_NAME}
g++ -Wall -fPIC -I. -I ${ANALYSIS_PATH} -I ${CORSOCXX_UTIL}         \
-o ${EXE_NAME} dum.cc -L ${ANALYSIS_PATH} -Wl,--no-as-needed        \
-lAnalysisFramework -lAnalysisObjects -lAnalysisUtilities           \
-lAnalysisPlugins 


export EXE_NAME=runDump
echo "compile " ${EXE_NAME}
rm -f ${EXE_NAME}
g++ -Wall -fPIC -I. -I ${ANALYSIS_PATH} -I ${CORSOCXX_UTIL}         \
-o ${EXE_NAME} dum.cc -L ${ANALYSIS_PATH} -Wl,--no-as-needed        \
-lAnalysisFramework -lAnalysisObjects -lAnalysisUtilities           \
-ldump 

export EXE_NAME=runMass
echo "compile " ${EXE_NAME}
rm -f ${EXE_NAME}
g++ -Wall -fPIC -I. -I ${ANALYSIS_PATH} -I ${CORSOCXX_UTIL}         \
-o ${EXE_NAME} dum.cc -L ${ANALYSIS_PATH} -Wl,--no-as-needed        \
-lAnalysisFramework -lAnalysisObjects -lAnalysisUtilities           \
-lplotMass 

export EXE_NAME=runTime
echo "compile " ${EXE_NAME}
rm -f ${EXE_NAME}
g++ -Wall -fPIC -I. -I ${ANALYSIS_PATH} -I ${CORSOCXX_UTIL}         \
-o ${EXE_NAME} dum.cc -L ${ANALYSIS_PATH} -Wl,--no-as-needed        \
-lAnalysisFramework -lAnalysisObjects -lAnalysisUtilities           \
-lplotTime 

#------------------------------------------------------------------------------------------------------------------
	
export LD_LIBRARY_PATH=${ANALYSIS_PATH}:${LD_LIBRARY_PATH}

echo "ATTENTION! if you havent use source to execute the script, the shared library path have to be manually set"
echo
echo "Copy and paste one one of the following commands to execute the desired block of code"
echo
echo "EventReadFromFile"
echo
echo "./runMass plotMass RootFileName histo.root MassFileName ../massRanges input ../particles_events"
echo "./runTime plotTime RootFileName histo.root TimeFileName ../particleFitters input ../particles_events"
echo "./runDump dump input ../particles_events"
echo "./runAll plotMass plotTime RootFileName histo.root dump MassFileName ../massRanges TimeFileName ../particleFitters input ../particles_events"
echo
echo "EventSim"
echo
echo "./runMass plotMass RootFileName histo_sim.root MassFileName ../massRanges sim \"numero_eventi\" \"seed\""
echo "./runTime plotTime RootFileName histo_sim.root TimeFileName ../particleFitters sim \"numero_eventi\" \"seed\""
echo "./runDump dump sim \"numero_eventi\" \"seed\""
echo "./runAll plotMass plotTime RootFileName histo_sim.root dump MassFileName ../massRanges TimeFileName ../particleFitters sim \"numero_eventi\" \seed\""


#'root-config --libs`
